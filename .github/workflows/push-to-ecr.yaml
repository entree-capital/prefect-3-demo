# https://aws.amazon.com/blogs/security/use-iam-roles-to-connect-github-actions-to-actions-in-aws/

name: Deploy Prefect flow to ECR
env:
  PROJECT_NAME: prefect-3-demo
  AWS_REGION: us-east-2

on:
  push:
    branches:
      - main

permissions:
  id-token: write
  contents: read

jobs:
  deploy:
    name: Deploy to production
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    env:
      ENVIRONMENT: prod

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1.7.0
        with:
          role-to-assume: arn:aws:iam::573574571452:role/GitHubAction-AssumeRoleWithAction
          role-session-name: GitHub_to_AWS_via_FederatedOIDC
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Get commit hash
        id: get-commit-hash
        run: echo "COMMIT_HASH=$(git rev-parse --short HEAD)" >> "$GITHUB_OUTPUT"

      - name: Build and push
        id: build-docker-image
        env:
          GITHUB_SHA: ${{ steps.get-commit-hash.outputs.COMMIT_HASH }}
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: ${{ env.PROJECT_NAME }}
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ env.ECR_REGISTRY }}/${{ env.ECR_REPOSITORY }}:${{ env.GITHUB_SHA }}, ${{ env.ECR_REGISTRY }}/${{ env.ECR_REPOSITORY }}:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"
          cache: "pip"
      - run: pip install -r requirements.txt

      - name: Prefect Auth
        run: |
          prefect cloud login \
          --key ${{ secrets.PREFECT_API_KEY }} \
          --workspace entree-chef/default
        shell: bash

      - name: Prefect Deploy
        run: |
          prefect cloud workspace ls  
          prefect deploy --all --prefect-file prefect.yaml

      - name: Debug on failure
        if: failure()
        run: |
          echo "Debug information:"
          aws sts get-caller-identity
